{
  "name": "dance",
  "displayName": "Dance",
  "description": "Make those cursors dance with Kakoune-inspired keybindings.",
  "version": "0.3.2",
  "license": "ISC",
  "publisher": "gregoire",
  "author": {
    "name": "Gr√©goire Geis",
    "email": "git@gregoirege.is"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/71/dance.git"
  },
  "readme": "README.md",
  "categories": [
    "Keymaps",
    "Other"
  ],
  "main": "./out/src/extension.js",
  "engines": {
    "vscode": "^1.44.0"
  },
  "scripts": {
    "check": "prettier --check . && eslint .",
    "format": "prettier --write .",
    "generate": "ts-node ./commands/generate.ts && ts-node package.ts",
    "vscode:prepublish": "yarn run generate && yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "test": "yarn run compile && node ./out/test/run.js",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/js-yaml": "^3.12.3",
    "@types/mocha": "^8.0.3",
    "@types/node": "^14.6.0",
    "@types/prettier": "^2.1.2",
    "@types/vscode": "^1.44.0",
    "@typescript-eslint/eslint-plugin": "^4.4.1",
    "@typescript-eslint/parser": "^4.4.1",
    "eslint": "^7.11.0",
    "glob": "^7.1.6",
    "js-yaml": "^3.13.0",
    "mocha": "^8.1.1",
    "prettier": "^2.1.2",
    "source-map-support": "^0.5.19",
    "ts-node": "^8.9.1",
    "typescript": "^4.0.2",
    "vsce": "^1.75.0",
    "vscode-test": "^1.3.0"
  },
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Dance",
      "properties": {
        "dance.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Controls whether the Dance keybindings are enabled."
        },
        "dance.normalMode.lineHighlight": {
          "type": [
            "string",
            "null"
          ],
          "default": "editor.hoverHighlightBackground",
          "markdownDescription": "Controls the line highlighting applied to active lines in normal mode. Can be an hex color, a [theme color](https://code.visualstudio.com/api/references/theme-color) or null."
        },
        "dance.insertMode.lineHighlight": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "markdownDescription": "Controls the line highlighting applied to active lines in insert mode. Can be an hex color, a [theme color](https://code.visualstudio.com/api/references/theme-color) or null."
        },
        "dance.normalMode.lineNumbers": {
          "enum": [
            "off",
            "on",
            "relative",
            "inherit"
          ],
          "default": "relative",
          "description": "Controls the display of line numbers in normal mode.",
          "enumDescriptions": [
            "No line numbers.",
            "Absolute line numbers.",
            "Relative line numbers.",
            "Inherit from `editor.lineNumbers`."
          ]
        },
        "dance.insertMode.lineNumbers": {
          "enum": [
            "off",
            "on",
            "relative",
            "inherit"
          ],
          "default": "inherit",
          "description": "Controls the display of line numbers in insert mode.",
          "enumDescriptions": [
            "No line numbers.",
            "Absolute line numbers.",
            "Relative line numbers.",
            "Inherit from `editor.lineNumbers`."
          ]
        },
        "dance.normalMode.cursorStyle": {
          "enum": [
            "line",
            "block",
            "underline",
            "line-thin",
            "block-outline",
            "underline-thin",
            "inherit"
          ],
          "default": "inherit",
          "description": "Controls the cursor style in normal mode."
        },
        "dance.insertMode.cursorStyle": {
          "enum": [
            "line",
            "block",
            "underline",
            "line-thin",
            "block-outline",
            "underline-thin",
            "inherit"
          ],
          "default": "inherit",
          "description": "Controls the cursor style in insert mode."
        },
        "dance.insertMode.selectionStyle": {
          "type": "object",
          "default": {
            "borderColor": "$editor.selectionBackground",
            "borderStyle": "solid",
            "borderWidth": "2px",
            "borderRadius": "1px"
          },
          "description": "The style to apply to selections in insert mode.",
          "properties": {
            "backgroundColor": {
              "type": "string"
            },
            "borderColor": {
              "type": "string"
            },
            "borderStyle": {
              "type": "string"
            },
            "borderWidth": {
              "type": "string"
            },
            "borderRadius": {
              "type": "string"
            }
          }
        },
        "dance.selectionBehavior": {
          "enum": [
            "caret",
            "character"
          ],
          "default": "caret",
          "description": "Controls how selections behave within VS Code.",
          "markdownEnumDescriptions": [
            "Selections are anchored to carets, which is the native VS Code behavior; that is, they are positioned *between* characters and can therefore be empty.",
            "Selections are anchored to characters, like Kakoune; that is, they are positioned *on* characters, and therefore cannot be empty. Additionally, one-character selections will behave as if they were non-directional, like Kakoune."
          ]
        },
        "dance.menus": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "text": {
                      "type": "string"
                    },
                    "command": {
                      "type": "string"
                    },
                    "args": {
                      "type": "array"
                    }
                  }
                }
              }
            },
            "additionalProperties": false
          },
          "default": {
            "object": {
              "items": {
                "b()": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "parens"
                    }
                  ],
                  "text": "parenthesis block"
                },
                "B{}": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "braces"
                    }
                  ],
                  "text": "braces block"
                },
                "r[]": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "brackets"
                    }
                  ],
                  "text": "brackets block"
                },
                "a<>": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "angleBrackets"
                    }
                  ],
                  "text": "angle block"
                },
                "Q\"": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "doubleQuoteString"
                    }
                  ],
                  "text": "double quote string"
                },
                "q'": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "singleQuoteString"
                    }
                  ],
                  "text": "single quote string"
                },
                "g`": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "graveQuoteString"
                    }
                  ],
                  "text": "grave quote string"
                },
                "w": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "word"
                    }
                  ],
                  "text": "word"
                },
                "W": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "WORD"
                    }
                  ],
                  "text": "WORD"
                },
                "s": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "sentence"
                    }
                  ],
                  "text": "sentence"
                },
                "p": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "paragraph"
                    }
                  ],
                  "text": "paragraph"
                },
                " ": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "whitespaces"
                    }
                  ],
                  "text": "whitespaces"
                },
                "i": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "indent"
                    }
                  ],
                  "text": "indent"
                },
                "n": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "number"
                    }
                  ],
                  "text": "number"
                },
                "u": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "argument"
                    }
                  ],
                  "text": "argument"
                },
                "c": {
                  "command": "dance.objects.performSelection",
                  "args": [
                    {
                      "object": "custom"
                    }
                  ],
                  "text": "custom object desc"
                }
              }
            },
            "goto": {
              "items": {
                "h": {
                  "text": "go to line start",
                  "command": "dance.goto.lineStart"
                },
                "l": {
                  "text": "go to line end",
                  "command": "dance.goto.lineEnd"
                },
                "i": {
                  "text": "go to non-blank line start",
                  "command": "dance.goto.lineStart.nonBlank"
                },
                "g": {
                  "text": "go to first line",
                  "command": "dance.goto.firstLine"
                },
                "k": {
                  "text": "go to first line",
                  "command": "dance.goto.firstLine"
                },
                "j": {
                  "text": "go to last line",
                  "command": "dance.goto.lastLine"
                },
                "e": {
                  "text": "go to last char of last line",
                  "command": "dance.goto.lastCharacter"
                },
                "t": {
                  "text": "go to the first displayed line",
                  "command": "dance.goto.firstVisibleLine"
                },
                "c": {
                  "text": "go to the middle displayed line",
                  "command": "dance.goto.middleVisibleLine"
                },
                "b": {
                  "text": "go to the last displayed line",
                  "command": "dance.goto.lastVisibleLine"
                },
                "f": {
                  "text": "go to file whose name is selected",
                  "command": "dance.goto.selectedFile"
                },
                ".": {
                  "text": "go to last buffer modification position",
                  "command": "dance.goto.lastModification"
                }
              }
            },
            "goto.extend": {
              "items": {
                "h": {
                  "text": "extend to line start",
                  "command": "dance.goto.lineStart.extend"
                },
                "l": {
                  "text": "extend to line end",
                  "command": "dance.goto.lineEnd.extend"
                },
                "i": {
                  "text": "extend to non-blank line start",
                  "command": "dance.goto.lineStart.nonBlank.extend"
                },
                "g": {
                  "text": "extend to first line",
                  "command": "dance.goto.firstLine.extend"
                },
                "k": {
                  "text": "extend to first line",
                  "command": "dance.goto.firstLine.extend"
                },
                "j": {
                  "text": "extend to last line",
                  "command": "dance.goto.lastLine.extend"
                },
                "e": {
                  "text": "extend to last char of last line",
                  "command": "dance.goto.lastCharacter.extend"
                },
                "t": {
                  "text": "extend to the first displayed line",
                  "command": "dance.goto.firstVisibleLine.extend"
                },
                "c": {
                  "text": "extend to the middle displayed line",
                  "command": "dance.goto.middleVisibleLine.extend"
                },
                "b": {
                  "text": "extend to the last displayed line",
                  "command": "dance.goto.lastVisibleLine.extend"
                },
                "f": {
                  "text": "extend to file whose name is selected",
                  "command": "dance.goto.selectedFile.extend"
                },
                ".": {
                  "text": "extend to last buffer modification position",
                  "command": "dance.goto.lastModification.extend"
                }
              }
            }
          }
        }
      }
    },
    "commands": [
      {
        "command": "dance.toggle",
        "title": "Toggle",
        "description": "Toggles Dance key bindings.",
        "category": "Dance"
      },
      {
        "command": "dance.set.normal",
        "title": "Set mode to Normal",
        "description": "Set Dance mode to Normal.",
        "category": "Dance"
      },
      {
        "command": "dance.set.insert",
        "title": "Set mode to Insert",
        "description": "Set Dance mode to Insert.",
        "category": "Dance"
      },
      {
        "command": "dance.tmp.normal",
        "title": "Temporary normal mode",
        "description": "Switches to normal mode temporarily.",
        "category": "Dance"
      },
      {
        "command": "dance.tmp.insert",
        "title": "Temporary insert mode",
        "description": "Switches to insert mode temporarily.",
        "category": "Dance"
      },
      {
        "command": "dance.insert.before",
        "title": "Insert before",
        "description": "Start insert before the current selections.",
        "category": "Dance"
      },
      {
        "command": "dance.insert.after",
        "title": "Insert after",
        "description": "Start insert after the current selections.",
        "category": "Dance"
      },
      {
        "command": "dance.insert.lineStart",
        "title": "Insert at line start",
        "description": "Start insert at line start of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.insert.lineEnd",
        "title": "Insert at line end",
        "description": "Start insert at line end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.insert.newLine.below",
        "title": "Insert new line below",
        "description": "Create new line and start insert below.",
        "category": "Dance"
      },
      {
        "command": "dance.insert.newLine.above",
        "title": "Insert new line above",
        "description": "Create new line and start insert above.",
        "category": "Dance"
      },
      {
        "command": "dance.newLine.below",
        "title": "Add new line below",
        "description": "Add a new line below, without entering insert mode.",
        "category": "Dance"
      },
      {
        "command": "dance.newLine.above",
        "title": "Add new line above",
        "description": "Add a new line above, without entering insert mode.",
        "category": "Dance"
      },
      {
        "command": "dance.repeat.insert",
        "title": "Repeat last insert-mode change",
        "description": "Repeat last insert-mode change.",
        "category": "Dance"
      },
      {
        "command": "dance.repeat.objectOrSelectTo",
        "title": "Repeat last object select / character find",
        "description": "Repeat last object select / character find.",
        "category": "Dance"
      },
      {
        "command": "dance.left",
        "title": "Move left",
        "description": "Move left.",
        "category": "Dance"
      },
      {
        "command": "dance.right",
        "title": "Move right",
        "description": "Move right.",
        "category": "Dance"
      },
      {
        "command": "dance.up",
        "title": "Move up",
        "description": "Move up.",
        "category": "Dance"
      },
      {
        "command": "dance.down",
        "title": "Move down",
        "description": "Move down.",
        "category": "Dance"
      },
      {
        "command": "dance.up.page",
        "title": "Scroll one page up",
        "description": "Scroll one page up.",
        "category": "Dance"
      },
      {
        "command": "dance.down.page",
        "title": "Scroll one page down",
        "description": "Scroll one page down.",
        "category": "Dance"
      },
      {
        "command": "dance.up.halfPage",
        "title": "Scroll half a page up",
        "description": "Scroll half a page up.",
        "category": "Dance"
      },
      {
        "command": "dance.down.halfPage",
        "title": "Scroll half a page down",
        "description": "Scroll half a page down.",
        "category": "Dance"
      },
      {
        "command": "dance.select.to.included",
        "title": "Select to",
        "description": "Select to the next character pressed, including it.",
        "category": "Dance"
      },
      {
        "command": "dance.select.to.excluded",
        "title": "Select until",
        "description": "Select until the next character pressed, excluding it.",
        "category": "Dance"
      },
      {
        "command": "dance.select.buffer",
        "title": "Select whole buffer",
        "description": "Select whole buffer.",
        "category": "Dance"
      },
      {
        "command": "dance.select.line",
        "title": "Select line",
        "description": "Select line on which the end of each selection lies (or next line when end lies on an end-of-line).",
        "category": "Dance"
      },
      {
        "command": "dance.select.toLineBegin",
        "title": "Select to line beginning",
        "description": "Select to line beginning.",
        "category": "Dance"
      },
      {
        "command": "dance.select.toLineEnd",
        "title": "Select to line end",
        "description": "Select to line end.",
        "category": "Dance"
      },
      {
        "command": "dance.select.enclosing",
        "title": "Select enclosing characters",
        "description": "Select enclosing characters.",
        "category": "Dance"
      },
      {
        "command": "dance.expandLines",
        "title": "Extend lines",
        "description": "Extend selections to contain full lines (including end-of-lines).",
        "category": "Dance"
      },
      {
        "command": "dance.trimLines",
        "title": "Trim lines",
        "description": "Trim selections to only contain full lines (from start to line break).",
        "category": "Dance"
      },
      {
        "command": "dance.trimSelections",
        "title": "Trim selections",
        "description": "Trim whitespace at beginning and end of selections.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word",
        "title": "Select to next word start",
        "description": "Select the word and following whitespaces on the right of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.previous",
        "title": "Select to previous word start",
        "description": "Select preceding whitespaces and the word on the left of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.end",
        "title": "Select to next word end",
        "description": "Select preceding whitespaces and the word on the right of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.alt",
        "title": "Select to next non-whitespace word start",
        "description": "Select the non-whitespace word and following whitespaces on the right of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.alt.previous",
        "title": "Select to previous non-whitespace word start",
        "description": "Select preceding whitespaces and the non-whitespace word on the left of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.alt.end",
        "title": "Select to next non-whitespace word end",
        "description": "Select preceding whitespaces and the non-whitespace word on the right of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select",
        "title": "Select",
        "description": "Select within current selections according to a RegExp.",
        "category": "Dance"
      },
      {
        "command": "dance.split",
        "title": "Split",
        "description": "Split within current selections according to a RegExp.",
        "category": "Dance"
      },
      {
        "command": "dance.split.lines",
        "title": "Split lines",
        "description": "Split selections into lines.",
        "category": "Dance"
      },
      {
        "command": "dance.select.firstLast",
        "title": "Select first and last characters",
        "description": "Select first and last characters of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.copy",
        "title": "Copy selection to next line",
        "description": "Copy selection to next line.",
        "category": "Dance"
      },
      {
        "command": "dance.select.copy.backwards",
        "title": "Copy selection to previous line",
        "description": "Copy selection to previous line.",
        "category": "Dance"
      },
      {
        "command": "dance.selections.reduce",
        "title": "Reduce selections",
        "description": "Reduce selections to their cursor.",
        "category": "Dance"
      },
      {
        "command": "dance.selections.flip",
        "title": "Flip selections",
        "description": "Flip the direction of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.selections.forward",
        "title": "Forward selections",
        "description": "Ensure selections are in forward direction (the active cursor is after the anchor).",
        "category": "Dance"
      },
      {
        "command": "dance.selections.backward",
        "title": "Backward selections",
        "description": "Ensure selections are in backward direction (the active cursor is before the anchor).",
        "category": "Dance"
      },
      {
        "command": "dance.selections.clear",
        "title": "Clear selections",
        "description": "Clear selections (except main)",
        "category": "Dance"
      },
      {
        "command": "dance.selections.clearMain",
        "title": "Clear main selection",
        "description": "Clear main selection.",
        "category": "Dance"
      },
      {
        "command": "dance.selections.keepMatching",
        "title": "Keep matching selections",
        "description": "Keep selections that match a RegExp.",
        "category": "Dance"
      },
      {
        "command": "dance.selections.clearMatching",
        "title": "Clear matching selections",
        "description": "Clear selections that match a RegExp.",
        "category": "Dance"
      },
      {
        "command": "dance.selections.merge",
        "title": "Merge contiguous selections",
        "description": "Merge contiguous selections together, including across lines.",
        "category": "Dance"
      },
      {
        "command": "dance.selections.align",
        "title": "Align selections",
        "description": "Align selections, aligning the cursor of each selection by inserting spaces before the first character of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.selections.align.copy",
        "title": "Copy indentation",
        "description": "Copy the indentation of the main selection (or the count one if a count is given) to all other ones.",
        "category": "Dance"
      },
      {
        "command": "dance.delete.yank",
        "title": "Yank and delete",
        "description": "Yank and delete selections.",
        "category": "Dance"
      },
      {
        "command": "dance.delete.insert.yank",
        "title": "Yank, delete and insert",
        "description": "Yank, delete and enter insert mode.",
        "category": "Dance"
      },
      {
        "command": "dance.delete.noYank",
        "title": "Delete without yank",
        "description": "Delete selections without yanking.",
        "category": "Dance"
      },
      {
        "command": "dance.delete.insert.noYank",
        "title": "Delete and insert without yank",
        "description": "Delete selections without yanking and enter insert mode.",
        "category": "Dance"
      },
      {
        "command": "dance.yank",
        "title": "Yank",
        "description": "Yank selections.",
        "category": "Dance"
      },
      {
        "command": "dance.paste.after",
        "title": "Paste after",
        "description": "Paste after the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.paste.before",
        "title": "Paste before",
        "description": "Paste before the start of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.paste.select.after",
        "title": "Paste after and select",
        "description": "Paste after the end of each selection and select pasted text.",
        "category": "Dance"
      },
      {
        "command": "dance.paste.select.before",
        "title": "Paste before and select",
        "description": "Paste before the start of each selection and select pasted text.",
        "category": "Dance"
      },
      {
        "command": "dance.paste.replace",
        "title": "Replace",
        "description": "Replace selections with yanked text.",
        "category": "Dance"
      },
      {
        "command": "dance.paste.replace.every",
        "title": "Replace with every",
        "description": "Replace selections with every yanked text.",
        "category": "Dance"
      },
      {
        "command": "dance.replace.characters",
        "title": "Replace character",
        "description": "Replace each selected character with the next entered one.",
        "category": "Dance"
      },
      {
        "command": "dance.join",
        "title": "Join lines",
        "description": "Join selected lines.",
        "category": "Dance"
      },
      {
        "command": "dance.join.select",
        "title": "Join lines and select spaces",
        "description": "Join selected lines and select spaces inserted in place of line breaks.",
        "category": "Dance"
      },
      {
        "command": "dance.indent",
        "title": "Indent",
        "description": "Indent selected lines.",
        "category": "Dance"
      },
      {
        "command": "dance.indent.withEmpty",
        "title": "Indent (including empty)",
        "description": "Indent selected lines (including empty lines).",
        "category": "Dance"
      },
      {
        "command": "dance.deindent",
        "title": "Deindent",
        "description": "Deindent selected lines.",
        "category": "Dance"
      },
      {
        "command": "dance.deindent.further",
        "title": "Deindent (including incomplete indent)",
        "description": "Deindent selected lines (and remove additional incomplete indent).",
        "category": "Dance"
      },
      {
        "command": "dance.toLowerCase",
        "title": "Transform to lowercase",
        "description": "Transform to lowercase.",
        "category": "Dance"
      },
      {
        "command": "dance.toUpperCase",
        "title": "Transform to uppercase",
        "description": "Transform to uppercase.",
        "category": "Dance"
      },
      {
        "command": "dance.swapCase",
        "title": "Swap case",
        "description": "Swap case.",
        "category": "Dance"
      },
      {
        "command": "dance.pipe.filter",
        "title": "Filter through pipe",
        "description": "Pipe each selection to a program, and keeps it if the program returns 0.",
        "category": "Dance"
      },
      {
        "command": "dance.pipe.replace",
        "title": "Pipe and replace",
        "description": "Pipe each selection to a command, and replaces it with its output.",
        "category": "Dance"
      },
      {
        "command": "dance.pipe.ignore",
        "title": "Pipe",
        "description": "Pipe each selection to a command, ignoring their results.",
        "category": "Dance"
      },
      {
        "command": "dance.pipe.append",
        "title": "Pipe and append",
        "description": "Pipe each selection to a command, appending the output after the selection.",
        "category": "Dance"
      },
      {
        "command": "dance.pipe.prepend",
        "title": "Pipe and prepend",
        "description": "Pipe each selection to a command, prepending the output before the selection.",
        "category": "Dance"
      },
      {
        "command": "dance.history.undo",
        "title": "Undo",
        "description": "Undo.",
        "category": "Dance"
      },
      {
        "command": "dance.history.backward",
        "title": "Move backward in history",
        "description": "Move backward in history.",
        "category": "Dance"
      },
      {
        "command": "dance.history.redo",
        "title": "Redo",
        "description": "Redo.",
        "category": "Dance"
      },
      {
        "command": "dance.history.forward",
        "title": "Move forward in history",
        "description": "Move forward in history.",
        "category": "Dance"
      },
      {
        "command": "dance.history.repeat",
        "title": "Repeat last change",
        "description": "Repeat last change.",
        "category": "Dance"
      },
      {
        "command": "dance.history.repeat.selection",
        "title": "Repeat last selection change",
        "description": "Repeat last selection change.",
        "category": "Dance"
      },
      {
        "command": "dance.history.repeat.edit",
        "title": "Repeat last edit change",
        "description": "Repeat last edit change.",
        "category": "Dance"
      },
      {
        "command": "dance.macros.record.start",
        "title": "Start recording macro",
        "description": "Start recording macro.",
        "category": "Dance"
      },
      {
        "command": "dance.macros.record.stop",
        "title": "Stop recording macro",
        "description": "Stop recording macro.",
        "category": "Dance"
      },
      {
        "command": "dance.macros.play",
        "title": "Play macro",
        "description": "Play macro.",
        "category": "Dance"
      },
      {
        "command": "dance.rotate",
        "title": "Rotate",
        "description": "Rotate each selection clockwise.",
        "category": "Dance"
      },
      {
        "command": "dance.rotate.backwards",
        "title": "Rotate backwards",
        "description": "Rotate each selection counter-clockwise.",
        "category": "Dance"
      },
      {
        "command": "dance.rotate.content",
        "title": "Rotate selection content",
        "description": "Rotate each selection (as well as its content) clockwise.",
        "category": "Dance"
      },
      {
        "command": "dance.rotate.content.backwards",
        "title": "Rotate selection content backwards",
        "description": "Rotate each selection (as well as its content) counter-clockwise.",
        "category": "Dance"
      },
      {
        "command": "dance.rotate.contentOnly",
        "title": "Rotate content only",
        "description": "Rotate each selection content clockwise, without changing selections.",
        "category": "Dance"
      },
      {
        "command": "dance.rotate.contentOnly.backwards",
        "title": "Rotate content only backwards",
        "description": "Rotate each selection content counter-clockwise, without changing selections.",
        "category": "Dance"
      },
      {
        "command": "dance.search",
        "title": "Search",
        "description": "Search for the given input string.",
        "category": "Dance"
      },
      {
        "command": "dance.search.backwards",
        "title": "Search backwards",
        "description": "Search for the given input string before the current selections.",
        "category": "Dance"
      },
      {
        "command": "dance.search.selection.smart",
        "title": "Search current selections (smart)",
        "description": "Search current selections (smart).",
        "category": "Dance"
      },
      {
        "command": "dance.search.selection",
        "title": "Search current selections",
        "description": "Search current selections.",
        "category": "Dance"
      },
      {
        "command": "dance.search.next",
        "title": "Select next match",
        "description": "Select next match after the main selection.",
        "category": "Dance"
      },
      {
        "command": "dance.search.next.add",
        "title": "Add next match",
        "description": "Add a new selection with the next match after the main selection.",
        "category": "Dance"
      },
      {
        "command": "dance.search.previous",
        "title": "Select previous match",
        "description": "Select previous match before the main selection.",
        "category": "Dance"
      },
      {
        "command": "dance.search.previous.add",
        "title": "Add previous match",
        "description": "Add a new selection with the previous match before the main selection.",
        "category": "Dance"
      },
      {
        "command": "dance.objects.performSelection",
        "title": "Perform selections specified in the arguments.",
        "description": "Perform selections specified in the arguments..",
        "category": "Dance"
      },
      {
        "command": "dance.goto",
        "title": "Go to...",
        "description": "Shows prompt to jump somewhere",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lineStart",
        "title": "Go to line start",
        "description": "Go to line start.",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lineStart.nonBlank",
        "title": "Go to non-blank line start",
        "description": "Go to first non-whitespace character of the line",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lineEnd",
        "title": "Go to line end",
        "description": "Go to line end.",
        "category": "Dance"
      },
      {
        "command": "dance.goto.firstLine",
        "title": "Go to first line",
        "description": "Go to first line.",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lastLine",
        "title": "Go to last line",
        "description": "Go to last line.",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lastCharacter",
        "title": "Go to last character of the document",
        "description": "Go to last character of the document.",
        "category": "Dance"
      },
      {
        "command": "dance.goto.firstVisibleLine",
        "title": "Go to first visible line",
        "description": "Go to first visible line.",
        "category": "Dance"
      },
      {
        "command": "dance.goto.middleVisibleLine",
        "title": "Go to middle visible line",
        "description": "Go to middle visible line.",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lastVisibleLine",
        "title": "Go to last visible line",
        "description": "Go to last visible line.",
        "category": "Dance"
      },
      {
        "command": "dance.goto.selectedFile",
        "title": "Open file under selection",
        "description": "Open file under selection.",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lastModification",
        "title": "Go to last buffer modification position",
        "description": "Go to last buffer modification position.",
        "category": "Dance"
      },
      {
        "command": "dance.openMenu",
        "title": "Open quick-jump menu",
        "description": "Open quick-jump menu.",
        "category": "Dance"
      },
      {
        "command": "dance.registers.insert",
        "title": "Insert value in register",
        "description": "Insert value in register.",
        "category": "Dance"
      },
      {
        "command": "dance.registers.select",
        "title": "Select register for next command",
        "description": "Select register for next command.",
        "category": "Dance"
      },
      {
        "command": "dance.marks.saveSelections",
        "title": "Save selections",
        "description": "Save selections.",
        "category": "Dance"
      },
      {
        "command": "dance.marks.restoreSelections",
        "title": "Restore selections",
        "description": "Restore selections.",
        "category": "Dance"
      },
      {
        "command": "dance.marks.combineSelections.fromCurrent",
        "title": "Combine current selections with ones from register",
        "description": "Combine current selections with ones from register.",
        "category": "Dance"
      },
      {
        "command": "dance.marks.combineSelections.fromRegister",
        "title": "Combine register selections with current ones",
        "description": "Combine register selections with current ones.",
        "category": "Dance"
      },
      {
        "command": "dance.cancel",
        "title": "Cancel operation",
        "description": "Cancels waiting for input from the user",
        "category": "Dance"
      },
      {
        "command": "dance.left.extend",
        "title": "Move left (extend)",
        "description": "Move left (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.right.extend",
        "title": "Move right (extend)",
        "description": "Move right (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.up.extend",
        "title": "Move up (extend)",
        "description": "Move up (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.down.extend",
        "title": "Move down (extend)",
        "description": "Move down (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.select.to.included.extend",
        "title": "Extend to",
        "description": "Extend to the next character pressed, including it.",
        "category": "Dance"
      },
      {
        "command": "dance.select.to.excluded.extend",
        "title": "Extend until",
        "description": "Extend with until the next character pressed, excluding it.",
        "category": "Dance"
      },
      {
        "command": "dance.select.line.extend",
        "title": "Extend with line",
        "description": "Extend with line on which the end of each selection lies (or next line when end lies on an end-of-line).",
        "category": "Dance"
      },
      {
        "command": "dance.select.toLineBegin.extend",
        "title": "Extend to line beginning",
        "description": "Extend to line beginning.",
        "category": "Dance"
      },
      {
        "command": "dance.select.toLineEnd.extend",
        "title": "Extend to line end",
        "description": "Extend to line end.",
        "category": "Dance"
      },
      {
        "command": "dance.select.enclosing.extend",
        "title": "Extend with enclosing characters",
        "description": "Extend with enclosing characters.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.extend",
        "title": "Extend to next word start",
        "description": "Extend with the word and following whitespaces on the right of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.previous.extend",
        "title": "Extend to previous word start",
        "description": "Extend with preceding whitespaces and the word on the left of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.end.extend",
        "title": "Extend to next word end",
        "description": "Extend with preceding whitespaces and the word on the right of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.alt.extend",
        "title": "Extend to next non-whitespace word start",
        "description": "Extend with the non-whitespace word and following whitespaces on the right of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.alt.previous.extend",
        "title": "Extend to previous non-whitespace word start",
        "description": "Extend with preceding whitespaces and the non-whitespace word on the left of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.select.word.alt.end.extend",
        "title": "Extend to next non-whitespace word end",
        "description": "Extend with preceding whitespaces and the non-whitespace word on the right of the end of each selection.",
        "category": "Dance"
      },
      {
        "command": "dance.search.extend",
        "title": "Search (extend)",
        "description": "Search for the given input string (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.search.backwards.extend",
        "title": "Search backwards (extend)",
        "description": "Search for the given input string before the current selections (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.goto.extend",
        "title": "Go to... (extend)",
        "description": "Shows prompt to jump somewhere",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lineStart.extend",
        "title": "Go to line start (extend)",
        "description": "Go to line start (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lineStart.nonBlank.extend",
        "title": "Go to non-blank line start (extend)",
        "description": "Go to first non-whitespace character of the line",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lineEnd.extend",
        "title": "Go to line end (extend)",
        "description": "Go to line end (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.goto.firstLine.extend",
        "title": "Go to first line (extend)",
        "description": "Go to first line (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lastLine.extend",
        "title": "Go to last line (extend)",
        "description": "Go to last line (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lastCharacter.extend",
        "title": "Go to last character of the document (extend)",
        "description": "Go to last character of the document (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.goto.firstVisibleLine.extend",
        "title": "Go to first visible line (extend)",
        "description": "Go to first visible line (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.goto.middleVisibleLine.extend",
        "title": "Go to middle visible line (extend)",
        "description": "Go to middle visible line (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lastVisibleLine.extend",
        "title": "Go to last visible line (extend)",
        "description": "Go to last visible line (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.goto.lastModification.extend",
        "title": "Go to last buffer modification position (extend)",
        "description": "Go to last buffer modification position (extend).",
        "category": "Dance"
      },
      {
        "command": "dance.select.to.included.backwards",
        "title": "Select to (backwards)",
        "description": "Select to the next character pressed, including it. (backwards)",
        "category": "Dance"
      },
      {
        "command": "dance.select.to.excluded.backwards",
        "title": "Select until (backwards)",
        "description": "Select until the next character pressed, excluding it. (backwards)",
        "category": "Dance"
      },
      {
        "command": "dance.select.enclosing.backwards",
        "title": "Select enclosing characters (backwards)",
        "description": "Select enclosing characters. (backwards)",
        "category": "Dance"
      },
      {
        "command": "dance.select.to.included.extend.backwards",
        "title": "Extend to (backwards)",
        "description": "Extend to the next character pressed, including it. (backwards)",
        "category": "Dance"
      },
      {
        "command": "dance.select.to.excluded.extend.backwards",
        "title": "Extend until (backwards)",
        "description": "Extend with until the next character pressed, excluding it. (backwards)",
        "category": "Dance"
      },
      {
        "command": "dance.select.enclosing.extend.backwards",
        "title": "Extend with enclosing characters (backwards)",
        "description": "Extend with enclosing characters. (backwards)",
        "category": "Dance"
      },
      {
        "command": "dance.count.0",
        "title": "Count 0",
        "description": "Adds 0 to the current counter for the next operation.",
        "category": "Dance"
      },
      {
        "command": "dance.count.1",
        "title": "Count 1",
        "description": "Adds 1 to the current counter for the next operation.",
        "category": "Dance"
      },
      {
        "command": "dance.count.2",
        "title": "Count 2",
        "description": "Adds 2 to the current counter for the next operation.",
        "category": "Dance"
      },
      {
        "command": "dance.count.3",
        "title": "Count 3",
        "description": "Adds 3 to the current counter for the next operation.",
        "category": "Dance"
      },
      {
        "command": "dance.count.4",
        "title": "Count 4",
        "description": "Adds 4 to the current counter for the next operation.",
        "category": "Dance"
      },
      {
        "command": "dance.count.5",
        "title": "Count 5",
        "description": "Adds 5 to the current counter for the next operation.",
        "category": "Dance"
      },
      {
        "command": "dance.count.6",
        "title": "Count 6",
        "description": "Adds 6 to the current counter for the next operation.",
        "category": "Dance"
      },
      {
        "command": "dance.count.7",
        "title": "Count 7",
        "description": "Adds 7 to the current counter for the next operation.",
        "category": "Dance"
      },
      {
        "command": "dance.count.8",
        "title": "Count 8",
        "description": "Adds 8 to the current counter for the next operation.",
        "category": "Dance"
      },
      {
        "command": "dance.count.9",
        "title": "Count 9",
        "description": "Adds 9 to the current counter for the next operation.",
        "category": "Dance"
      }
    ],
    "keybindings": [
      {
        "key": "Alt+a",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "select"
        }
      },
      {
        "key": "Alt+a",
        "when": "editorTextFocus && dance.mode == 'insert'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "select"
        }
      },
      {
        "key": "Alt+i",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "select",
          "inner": true
        }
      },
      {
        "key": "Alt+i",
        "when": "editorTextFocus && dance.mode == 'insert'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "select",
          "inner": true
        }
      },
      {
        "key": "[",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "selectToStart"
        }
      },
      {
        "key": "]",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "selectToEnd"
        }
      },
      {
        "key": "Shift+;",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "workbench.action.showCommands"
      },
      {
        "key": "Shift+[",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "selectToStart",
          "extend": true
        }
      },
      {
        "key": "Shift+]",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "selectToEnd",
          "extend": true
        }
      },
      {
        "key": "Alt+[",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "selectToStart",
          "inner": true
        }
      },
      {
        "key": "Alt+]",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "selectToEnd",
          "inner": true
        }
      },
      {
        "key": "Alt+Shift+[",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "selectToStart",
          "extend": true,
          "inner": true
        }
      },
      {
        "key": "Alt+Shift+]",
        "when": "editorTextFocus && dance.mode == 'normal'",
        "command": "dance.openMenu",
        "args": {
          "menu": "object",
          "action": "selectToEnd",
          "extend": true,
          "inner": true
        }
      },
      {
        "command": "dance.set.normal",
        "key": "escape",
        "when": "editorTextFocus && dance.mode == 'insert'"
      },
      {
        "command": "dance.tmp.normal",
        "key": "Ctrl+v",
        "when": "editorTextFocus && dance.mode == 'insert'"
      },
      {
        "command": "dance.tmp.insert",
        "key": "Ctrl+v",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.insert.before",
        "key": "i",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.insert.after",
        "key": "a",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.insert.lineStart",
        "key": "Shift+i",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.insert.lineEnd",
        "key": "Shift+a",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.insert.newLine.below",
        "key": "o",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.insert.newLine.above",
        "key": "Shift+o",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.newLine.below",
        "key": "Alt+o",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.newLine.above",
        "key": "Shift+Alt+o",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.repeat.insert",
        "key": ".",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.repeat.objectOrSelectTo",
        "key": "Alt+.",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.left",
        "key": "left",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.left",
        "key": "h",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.right",
        "key": "right",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.right",
        "key": "l",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.up",
        "key": "up",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.up",
        "key": "k",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.down",
        "key": "down",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.down",
        "key": "j",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.up.page",
        "key": "Ctrl+b",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.up.page",
        "key": "Ctrl+b",
        "when": "editorTextFocus && dance.mode == 'insert'"
      },
      {
        "command": "dance.down.page",
        "key": "Ctrl+f",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.down.page",
        "key": "Ctrl+f",
        "when": "editorTextFocus && dance.mode == 'insert'"
      },
      {
        "command": "dance.up.halfPage",
        "key": "Ctrl+u",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.up.halfPage",
        "key": "Ctrl+u",
        "when": "editorTextFocus && dance.mode == 'insert'"
      },
      {
        "command": "dance.down.halfPage",
        "key": "Ctrl+d",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.down.halfPage",
        "key": "Ctrl+d",
        "when": "editorTextFocus && dance.mode == 'insert'"
      },
      {
        "command": "dance.select.to.included",
        "key": "f",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.to.excluded",
        "key": "t",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.buffer",
        "key": "Shift+5",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.line",
        "key": "x",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.toLineBegin",
        "key": "Alt+h",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.toLineBegin",
        "key": "home",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.toLineEnd",
        "key": "Alt+l",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.toLineEnd",
        "key": "end",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.enclosing",
        "key": "m",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.expandLines",
        "key": "Alt+x",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.trimLines",
        "key": "Shift+Alt+x",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.trimSelections",
        "key": "Shift+-",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word",
        "key": "w",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.previous",
        "key": "b",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.end",
        "key": "e",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.alt",
        "key": "Alt+w",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.alt.previous",
        "key": "Alt+b",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.alt.end",
        "key": "Alt+e",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select",
        "key": "s",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.split",
        "key": "Shift+s",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.split.lines",
        "key": "Alt+s",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.firstLast",
        "key": "Shift+Alt+s",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.copy",
        "key": "Shift+c",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.copy.backwards",
        "key": "Shift+Alt+c",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.reduce",
        "key": ";",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.flip",
        "key": "Alt+;",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.forward",
        "key": "Shift+Alt+;",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.clear",
        "key": "space",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.clearMain",
        "key": "Alt+space",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.keepMatching",
        "key": "Alt+k",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.clearMatching",
        "key": "Shift+Alt+k",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.merge",
        "key": "Shift+Alt+-",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.align",
        "key": "Shift+7",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.selections.align.copy",
        "key": "Shift+Alt+7",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.delete.yank",
        "key": "d",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.delete.insert.yank",
        "key": "c",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.delete.noYank",
        "key": "Alt+d",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.delete.insert.noYank",
        "key": "Alt+c",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.yank",
        "key": "y",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.paste.after",
        "key": "p",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.paste.before",
        "key": "Shift+p",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.paste.select.after",
        "key": "Alt+p",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.paste.select.before",
        "key": "Shift+Alt+p",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.paste.replace",
        "key": "Shift+r",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.paste.replace.every",
        "key": "Shift+Alt+r",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.replace.characters",
        "key": "r",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.join",
        "key": "Alt+j",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.join.select",
        "key": "Shift+Alt+j",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.indent",
        "key": "Shift+.",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.indent.withEmpty",
        "key": "Shift+Alt+.",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.deindent",
        "key": "Shift+Alt+,",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.deindent.further",
        "key": "Shift+,",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.toLowerCase",
        "key": "`",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.toUpperCase",
        "key": "Shift+`",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.swapCase",
        "key": "Alt+`",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.pipe.filter",
        "key": "Shift+4",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.pipe.replace",
        "key": "Shift+\\",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.pipe.ignore",
        "key": "Shift+Alt+\\",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.pipe.append",
        "key": "Shift+1",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.pipe.prepend",
        "key": "Shift+Alt+1",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.history.undo",
        "key": "u",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.history.backward",
        "key": "Alt+u",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.history.redo",
        "key": "Shift+u",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.history.forward",
        "key": "Shift+Alt+u",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.macros.record.start",
        "key": "Shift+q",
        "when": "editorTextFocus && dance.mode == 'normal' && !dance.recordingMacro"
      },
      {
        "command": "dance.macros.record.stop",
        "key": "escape",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.macros.play",
        "key": "q",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.rotate",
        "key": "Shift+9",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.rotate.backwards",
        "key": "Shift+0",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.rotate.content",
        "key": "Shift+Alt+9",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.rotate.content.backwards",
        "key": "Shift+Alt+0",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search",
        "key": "/",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search.backwards",
        "key": "Alt+/",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search.selection.smart",
        "key": "Shift+8",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search.selection",
        "key": "Shift+Alt+8",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search.next",
        "key": "n",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search.next.add",
        "key": "Shift+n",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search.previous",
        "key": "Alt+n",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search.previous.add",
        "key": "Shift+Alt+n",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.goto",
        "key": "g",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.registers.insert",
        "key": "Ctrl+r",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.registers.insert",
        "key": "Ctrl+r",
        "when": "editorTextFocus && dance.mode == 'insert'"
      },
      {
        "command": "dance.registers.select",
        "key": "Shift+\\'",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.marks.saveSelections",
        "key": "Shift+z",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.marks.restoreSelections",
        "key": "z",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.marks.combineSelections.fromCurrent",
        "key": "Shift+Alt+z",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.marks.combineSelections.fromRegister",
        "key": "Alt+z",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.cancel",
        "key": "escape",
        "when": "editorTextFocus && dance.mode == 'awaiting'"
      },
      {
        "command": "dance.left.extend",
        "key": "Shift+left",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.left.extend",
        "key": "Shift+h",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.right.extend",
        "key": "Shift+right",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.right.extend",
        "key": "Shift+l",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.up.extend",
        "key": "Shift+up",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.up.extend",
        "key": "Shift+k",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.down.extend",
        "key": "Shift+down",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.down.extend",
        "key": "Shift+j",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.to.included.extend",
        "key": "Shift+f",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.to.excluded.extend",
        "key": "Shift+t",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.line.extend",
        "key": "Shift+x",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.toLineBegin.extend",
        "key": "Shift+Alt+h",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.toLineBegin.extend",
        "key": "Shift+home",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.toLineEnd.extend",
        "key": "Shift+Alt+l",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.toLineEnd.extend",
        "key": "Shift+end",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.enclosing.extend",
        "key": "Shift+m",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.extend",
        "key": "Shift+w",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.previous.extend",
        "key": "Shift+b",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.end.extend",
        "key": "Shift+e",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.alt.extend",
        "key": "Shift+Alt+w",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.alt.previous.extend",
        "key": "Shift+Alt+b",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.word.alt.end.extend",
        "key": "Shift+Alt+e",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search.extend",
        "key": "Shift+/",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.search.backwards.extend",
        "key": "Shift+Alt+/",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.goto.extend",
        "key": "Shift+g",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.to.included.backwards",
        "key": "Alt+f",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.to.excluded.backwards",
        "key": "Alt+t",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.enclosing.backwards",
        "key": "Alt+m",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.to.included.extend.backwards",
        "key": "Alt+Shift+f",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.to.excluded.extend.backwards",
        "key": "Alt+Shift+t",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.select.enclosing.extend.backwards",
        "key": "Alt+Shift+m",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.0",
        "key": "0",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.1",
        "key": "1",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.2",
        "key": "2",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.3",
        "key": "3",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.4",
        "key": "4",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.5",
        "key": "5",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.6",
        "key": "6",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.7",
        "key": "7",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.8",
        "key": "8",
        "when": "editorTextFocus && dance.mode == 'normal'"
      },
      {
        "command": "dance.count.9",
        "key": "9",
        "when": "editorTextFocus && dance.mode == 'normal'"
      }
    ]
  }
}
