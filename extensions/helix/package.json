{
  "name": "dance-helix-keybindings",
  "description": "Helix keybindings for Dance",
  "version": "0.1.0",
  "license": "ISC",
  "extensionDependencies": [
    "gregoire.dance"
  ],
  "author": {
    "name": "Grégoire Geis",
    "email": "opensource@gregoirege.is"
  },
  "contributors": [
    {
      "name": "Rémi Lavergne",
      "url": "https://github.com/Strackeror"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/71/dance.git"
  },
  "engines": {
    "vscode": "^1.63.0"
  },
  "displayName": "Dance (Helix keybindings)",
  "publisher": "gregoire",
  "categories": [
    "Keymaps",
    "Other"
  ],
  "readme": "README.md",
  "icon": "assets/dance.png",
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "scripts": {
    "package": "vsce package --allow-star-activation",
    "publish": "vsce publish --allow-star-activation",
    "package:pre": "vsce package --allow-star-activation --pre-release --no-git-tag-version --no-update-package-json 0.1.0-pre1",
    "publish:pre": "vsce publish --allow-star-activation --pre-release --no-git-tag-version --no-update-package-json 0.1.0-pre1"
  },
  "devDependencies": {
    "@vscode/vsce": "^3.3.2"
  },
  "files": [
    "LICENSE",
    "README.md",
    "assets/dance.png"
  ],
  "contributes": {
    "configurationDefaults": {
      "dance.defaultMode": "helix/normal",
      "dance.modes": {
        "helix/insert": {
          "lineNumbers": "on",
          "onLeaveMode": [
            [
              ".selections.save",
              {
                "register": " insert"
              }
            ]
          ]
        },
        "helix/select": {
          "lineNumbers": "on",
          "cursorStyle": "block",
          "selectionBehavior": "character"
        },
        "helix/normal": {
          "lineNumbers": "relative",
          "cursorStyle": "block",
          "selectionBehavior": "character",
          "decorations": {
            "applyTo": "main",
            "backgroundColor": "$editor.hoverHighlightBackground",
            "isWholeLine": true
          },
          "onEnterMode": [
            [
              ".selections.restore",
              {
                "register": " ^",
                "try": true
              }
            ]
          ],
          "onLeaveMode": [
            [
              ".selections.save",
              {
                "register": " ^",
                "style": {
                  "borderColor": "$editor.selectionBackground",
                  "borderStyle": "solid",
                  "borderWidth": "2px",
                  "borderRadius": "1px"
                },
                "until": [
                  [
                    "mode-did-change",
                    {
                      "include": "normal"
                    }
                  ],
                  [
                    "selections-did-change"
                  ]
                ]
              }
            ]
          ]
        }
      },
      "dance.menus": {
        "match": {
          "title": "Match",
          "items": {
            "m": {
              "command": "dance.seek.enclosing",
              "text": "Goto matching bracket"
            },
            "a": {
              "command": "dance.openMenu",
              "args": [
                {
                  "menu": "object",
                  "title": "Match around"
                }
              ],
              "text": "Select around object"
            },
            "i": {
              "command": "dance.openMenu",
              "args": [
                {
                  "menu": "object",
                  "title": "Match inside",
                  "pass": [
                    {
                      "inner": true
                    }
                  ]
                }
              ],
              "text": "Select inside object"
            },
            "s": {
              "command": "dance.openMenu",
              "args": [
                {
                  "menu": "surround",
                  "title": "Surround object"
                }
              ],
              "text": "Surround object"
            },
            "r": {
              "command": "dance.openMenu",
              "args": [
                {
                  "menu": "resurround",
                  "title": "Resurround object"
                }
              ],
              "text": "Resurround object"
            },
            "d": {
              "command": "dance.openMenu",
              "args": [
                {
                  "menu": "unsurround",
                  "title": "Unsurround object"
                }
              ],
              "text": "Unsurround object"
            }
          }
        },
        "object": {
          "title": "Select object...",
          "items": {
            "()": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "\\((?#inner)\\)"
                }
              ],
              "text": "parenthesis block"
            },
            "{}": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "\\{(?#inner)\\}"
                }
              ],
              "text": "braces block"
            },
            "[]": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "\\[(?#inner)\\]"
                }
              ],
              "text": "brackets block"
            },
            "<>": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "<(?#inner)>"
                }
              ],
              "text": "angle block"
            },
            "\"": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "(?#noescape)\"(?#inner)(?#noescape)\""
                }
              ],
              "text": "double quote string"
            },
            "'": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "(?#noescape)'(?#inner)(?#noescape)'"
                }
              ],
              "text": "single quote string"
            },
            "`": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "(?#noescape)`(?#inner)(?#noescape)`"
                }
              ],
              "text": "grave quote string"
            },
            "w": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "[\\p{L}_\\d]+(?<after>[^\\S\\n]+)"
                }
              ],
              "text": "word"
            },
            "W": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "[\\S]+(?<after>[^\\S\\n]+)"
                }
              ],
              "text": "WORD"
            },
            "p": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "(?#predefined=paragraph)"
                }
              ],
              "text": "paragraph"
            },
            "a": {
              "command": "dance.seek.object",
              "args": [
                {
                  "input": "(?#predefined=argument)"
                }
              ],
              "text": "argument"
            },
            "!": {
              "command": "dance.seek.object",
              "text": "custom object desc"
            }
          }
        },
        "surround": {
          "title": "Surround object with...",
          "items": {
            "()": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "(",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": ")",
                      "where": "end"
                    }
                  }
                ]
              },
              "text": "parenthesis block"
            },
            "{}": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "{",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "}",
                      "where": "end"
                    }
                  }
                ]
              },
              "text": "braces block"
            },
            "[]": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "[",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "]",
                      "where": "end"
                    }
                  }
                ]
              },
              "text": "brackets block"
            },
            "<>": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "<",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": ">",
                      "where": "end"
                    }
                  }
                ]
              },
              "text": "angle block"
            },
            "\"": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "\"",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "\"",
                      "where": "end"
                    }
                  }
                ]
              },
              "text": "double quote string"
            },
            "'": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "'",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "'",
                      "where": "end"
                    }
                  }
                ]
              },
              "text": "single quote string"
            },
            "`": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "`",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "shift": "extend",
                      "text": "`",
                      "where": "end"
                    }
                  }
                ]
              },
              "text": "grave quote string"
            }
          }
        },
        "resurround": {
          "title": "Resurround object...",
          "items": {
            "()": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.enclosing",
                    "args": {
                      "pairs": [
                        "\\(",
                        "\\)",
                        "\\{",
                        "\\}",
                        "\\[",
                        "\\]",
                        "<",
                        ">",
                        "\"",
                        "\"",
                        "'",
                        "'",
                        "`",
                        "`"
                      ]
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "(",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": ")",
                      "where": "end"
                    }
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "parenthesis block"
            },
            "{}": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.enclosing",
                    "args": {
                      "pairs": [
                        "\\(",
                        "\\)",
                        "\\{",
                        "\\}",
                        "\\[",
                        "\\]",
                        "<",
                        ">",
                        "\"",
                        "\"",
                        "'",
                        "'",
                        "`",
                        "`"
                      ]
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "{",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "}",
                      "where": "end"
                    }
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "braces block"
            },
            "[]": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.enclosing",
                    "args": {
                      "pairs": [
                        "\\(",
                        "\\)",
                        "\\{",
                        "\\}",
                        "\\[",
                        "\\]",
                        "<",
                        ">",
                        "\"",
                        "\"",
                        "'",
                        "'",
                        "`",
                        "`"
                      ]
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "[",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "]",
                      "where": "end"
                    }
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "brackets block"
            },
            "<>": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.enclosing",
                    "args": {
                      "pairs": [
                        "\\(",
                        "\\)",
                        "\\{",
                        "\\}",
                        "\\[",
                        "\\]",
                        "<",
                        ">",
                        "\"",
                        "\"",
                        "'",
                        "'",
                        "`",
                        "`"
                      ]
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "<",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": ">",
                      "where": "end"
                    }
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "angle block"
            },
            "\"": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.enclosing",
                    "args": {
                      "pairs": [
                        "\\(",
                        "\\)",
                        "\\{",
                        "\\}",
                        "\\[",
                        "\\]",
                        "<",
                        ">",
                        "\"",
                        "\"",
                        "'",
                        "'",
                        "`",
                        "`"
                      ]
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "\"",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "\"",
                      "where": "end"
                    }
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "double quote string"
            },
            "'": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.enclosing",
                    "args": {
                      "pairs": [
                        "\\(",
                        "\\)",
                        "\\{",
                        "\\}",
                        "\\[",
                        "\\]",
                        "<",
                        ">",
                        "\"",
                        "\"",
                        "'",
                        "'",
                        "`",
                        "`"
                      ]
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "'",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "'",
                      "where": "end"
                    }
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "single quote string"
            },
            "`": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.enclosing",
                    "args": {
                      "pairs": [
                        "\\(",
                        "\\)",
                        "\\{",
                        "\\}",
                        "\\[",
                        "\\]",
                        "<",
                        ">",
                        "\"",
                        "\"",
                        "'",
                        "'",
                        "`",
                        "`"
                      ]
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "`",
                      "where": "start"
                    }
                  },
                  {
                    "command": "dance.edit.insert",
                    "args": {
                      "text": "`",
                      "where": "end"
                    }
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "grave quote string"
            }
          }
        },
        "unsurround": {
          "title": "Unsurround object...",
          "items": {
            "m": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.enclosing"
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "enclosing pair"
            },
            "()": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.object",
                    "args": [
                      {
                        "input": "\\((?#inner)\\)"
                      }
                    ]
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "parenthesis block"
            },
            "{}": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.object",
                    "args": [
                      {
                        "input": "\\{(?#inner)\\}"
                      }
                    ]
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "braces block"
            },
            "[]": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.object",
                    "args": [
                      {
                        "input": "\\[(?#inner)\\]"
                      }
                    ]
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "brackets block"
            },
            "<>": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.object",
                    "args": [
                      {
                        "input": "<(?#inner)>"
                      }
                    ]
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "angle block"
            },
            "\"": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.object",
                    "args": [
                      {
                        "input": "(?#noescape)\"(?#inner)(?#noescape)\""
                      }
                    ]
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "double quote string"
            },
            "'": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.object",
                    "args": [
                      {
                        "input": "(?#noescape)'(?#inner)(?#noescape)'"
                      }
                    ]
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "single quote string"
            },
            "`": {
              "command": "dance.run",
              "args": {
                "commands": [
                  {
                    "command": "dance.seek.object",
                    "args": [
                      {
                        "input": "(?#noescape)`(?#inner)(?#noescape)`"
                      }
                    ]
                  },
                  {
                    "command": "dance.selections.reduce.edges"
                  },
                  {
                    "command": "dance.edit.delete"
                  },
                  {
                    "command": "dance.selections.clear.secondary"
                  }
                ]
              },
              "text": "grave quote string"
            }
          }
        },
        "view": {
          "title": "View",
          "items": {
            "cz": {
              "text": "Align view center",
              "command": "dance.view.line",
              "args": [
                {
                  "at": "center"
                }
              ]
            },
            "t": {
              "text": "Align view top",
              "command": "dance.view.line",
              "args": [
                {
                  "at": "top"
                }
              ]
            },
            "b": {
              "text": "Align view bottom",
              "command": "dance.view.line",
              "args": [
                {
                  "at": "bottom"
                }
              ]
            },
            "k": {
              "text": "Scroll view up",
              "command": "editorScroll",
              "args": [
                {
                  "by": "line",
                  "revealCursor": true,
                  "to": "up"
                }
              ]
            },
            "j": {
              "text": "Scroll view down",
              "command": "editorScroll",
              "args": [
                {
                  "by": "line",
                  "revealCursor": true,
                  "to": "down"
                }
              ]
            },
            "/": {
              "text": "Search for regex pattern",
              "command": "dance.search"
            },
            "?": {
              "text": "Reverse search for regex pattern",
              "command": "dance.search.backward"
            },
            "n": {
              "text": "Select next search match",
              "command": "dance.search.next"
            },
            "N": {
              "text": "Select previous search match",
              "command": "dance.search.previous"
            }
          }
        },
        "goto": {
          "title": "Goto",
          "items": {
            "g": {
              "text": "to line number else file start",
              "command": "dance.select.lineStart",
              "args": [
                {
                  "count": 1
                }
              ]
            },
            "e": {
              "text": "to last line",
              "command": "dance.select.lineEnd",
              "args": [
                {
                  "count": 2147483647
                }
              ]
            },
            "f": {
              "text": "to file/URLs in selections",
              "command": "dance.selections.open"
            },
            "h": {
              "text": "to line start",
              "command": "dance.select.lineStart"
            },
            "l": {
              "text": "to line end",
              "command": "dance.select.lineEnd"
            },
            "s": {
              "text": "to first non-blank in line",
              "command": "dance.select.lineStart",
              "args": [
                {
                  "skipBlank": true
                }
              ]
            },
            "d": {
              "text": "to definition",
              "command": "editor.action.revealDefinition"
            },
            "r": {
              "text": "to references",
              "command": "editor.action.goToReferences"
            },
            "j": {
              "text": "to last line",
              "command": "dance.select.lastLine"
            },
            "t": {
              "text": "to window top",
              "command": "dance.select.firstVisibleLine"
            },
            "c": {
              "text": "to window center",
              "command": "dance.select.middleVisibleLine"
            },
            "b": {
              "text": "to window bottom",
              "command": "dance.select.lastVisibleLine"
            },
            "a": {
              "text": "to last buffer",
              "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
            },
            "A": {
              "text": "to last buffer...",
              "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
            },
            "n": {
              "text": "to next buffer",
              "command": "workbench.action.nextEditor"
            },
            "p": {
              "text": "to previous buffer",
              "command": "workbench.action.previousEditor"
            },
            ".": {
              "text": "to last buffer modification position",
              "command": "dance.selections.restore",
              "args": [
                {
                  "register": " insert"
                }
              ]
            }
          }
        }
      }
    },
    "keybindings": [
      {
        "key": "Shift+7",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Align selections",
        "command": "dance.edit.align"
      },
      {
        "key": "Shift+`",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Swap case",
        "command": "dance.edit.case.swap"
      },
      {
        "key": "`",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Transform to lower case",
        "command": "dance.edit.case.toLower"
      },
      {
        "key": "Alt+`",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Transform to upper case",
        "command": "dance.edit.case.toUpper"
      },
      {
        "key": "Shift+,",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Deindent selected lines (including incomplete indent)",
        "command": "dance.edit.deindent.withIncomplete"
      },
      {
        "key": "Alt+D",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Delete",
        "command": "dance.edit.delete"
      },
      {
        "key": "Shift+.",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Indent selected lines",
        "command": "dance.edit.indent"
      },
      {
        "key": "Shift+R",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Insert contents of register",
        "command": "dance.edit.insert"
      },
      {
        "key": "Shift+J",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Join lines",
        "command": "dance.edit.join"
      },
      {
        "key": "Shift+J",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Join lines",
        "command": "dance.edit.join"
      },
      {
        "key": "Shift+Alt+J",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Join lines and select inserted separators",
        "command": "dance.edit.join.select"
      },
      {
        "key": "Shift+Alt+J",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Join lines and select inserted separators",
        "command": "dance.edit.join.select"
      },
      {
        "key": "Shift+O",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Insert new line above and switch to insert",
        "command": "dance.edit.newLine.above.insert"
      },
      {
        "key": "Shift+O",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Insert new line above and switch to insert",
        "command": "dance.edit.newLine.above.insert"
      },
      {
        "key": "O",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Insert new line below and switch to insert",
        "command": "dance.edit.newLine.below.insert"
      },
      {
        "key": "O",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Insert new line below and switch to insert",
        "command": "dance.edit.newLine.below.insert"
      },
      {
        "key": "P",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Paste after and select",
        "command": "dance.edit.paste.after.select"
      },
      {
        "key": "Shift+P",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Paste before and select",
        "command": "dance.edit.paste.before.select"
      },
      {
        "key": "R",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Replace characters",
        "command": "dance.edit.replaceCharacters"
      },
      {
        "key": "D",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Copy and delete",
        "command": "dance.edit.yank-delete"
      },
      {
        "key": "C",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Copy, delete and switch to Insert",
        "command": "dance.edit.yank-delete-insert"
      },
      {
        "key": "C",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Copy, delete and switch to Insert",
        "command": "dance.edit.yank-delete-insert"
      },
      {
        "key": "Shift+R",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.insert"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "Alt+D",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.delete"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "D",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.yank-delete"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "Shift+P",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.paste.before"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "P",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.paste.after"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "Shift+.",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.indent"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "Shift+,",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.deindent"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "`",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.case.toLower"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "Alt+`",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.case.toUpper"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "Shift+`",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.case.swap"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "R",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".edit.replaceCharacters"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "Shift+U",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Redo",
        "command": "dance.history.redo"
      },
      {
        "key": "Shift+U",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Redo",
        "command": "dance.history.redo"
      },
      {
        "key": ".",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Repeat last edit without a command",
        "command": "dance.history.repeat.edit"
      },
      {
        "key": "NumPad_Decimal",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Repeat last edit without a command",
        "command": "dance.history.repeat.edit"
      },
      {
        "key": "Alt+.",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Repeat last seek",
        "command": "dance.history.repeat.seek"
      },
      {
        "key": "Alt+.",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Repeat last seek",
        "command": "dance.history.repeat.seek"
      },
      {
        "key": "U",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Undo",
        "command": "dance.history.undo"
      },
      {
        "key": "U",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Undo",
        "command": "dance.history.undo"
      },
      {
        "key": "Escape",
        "when": "editorTextFocus && dance.mode == 'helix/normal' && !dance.isRecording && !markersNavigationVisible",
        "title": "Cancel Dance operation",
        "command": "dance.cancel"
      },
      {
        "key": "Escape",
        "when": "editorTextFocus && dance.mode == 'input'",
        "title": "Cancel Dance operation",
        "command": "dance.cancel"
      },
      {
        "key": "Up",
        "when": "inputFocus && dance.inPrompt",
        "command": "dance.changeInput",
        "args": {
          "action": "previous"
        }
      },
      {
        "key": "Down",
        "when": "inputFocus && dance.inPrompt",
        "command": "dance.changeInput",
        "args": {
          "action": "next"
        }
      },
      {
        "key": "Shift+'",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select register for next command",
        "command": "dance.selectRegister"
      },
      {
        "key": "0",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 0 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 0
        }
      },
      {
        "key": "0",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 0 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 0
        }
      },
      {
        "key": "NumPad0",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 0 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 0
        }
      },
      {
        "key": "NumPad0",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 0 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 0
        }
      },
      {
        "key": "1",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 1 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 1
        }
      },
      {
        "key": "1",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 1 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 1
        }
      },
      {
        "key": "NumPad1",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 1 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 1
        }
      },
      {
        "key": "NumPad1",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 1 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 1
        }
      },
      {
        "key": "2",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 2 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 2
        }
      },
      {
        "key": "2",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 2 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 2
        }
      },
      {
        "key": "NumPad2",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 2 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 2
        }
      },
      {
        "key": "NumPad2",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 2 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 2
        }
      },
      {
        "key": "3",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 3 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 3
        }
      },
      {
        "key": "3",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 3 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 3
        }
      },
      {
        "key": "NumPad3",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 3 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 3
        }
      },
      {
        "key": "NumPad3",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 3 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 3
        }
      },
      {
        "key": "4",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 4 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 4
        }
      },
      {
        "key": "4",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 4 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 4
        }
      },
      {
        "key": "NumPad4",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 4 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 4
        }
      },
      {
        "key": "NumPad4",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 4 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 4
        }
      },
      {
        "key": "5",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 5 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 5
        }
      },
      {
        "key": "5",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 5 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 5
        }
      },
      {
        "key": "NumPad5",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 5 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 5
        }
      },
      {
        "key": "NumPad5",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 5 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 5
        }
      },
      {
        "key": "6",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 6 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 6
        }
      },
      {
        "key": "6",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 6 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 6
        }
      },
      {
        "key": "NumPad6",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 6 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 6
        }
      },
      {
        "key": "NumPad6",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 6 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 6
        }
      },
      {
        "key": "7",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 7 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 7
        }
      },
      {
        "key": "7",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 7 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 7
        }
      },
      {
        "key": "NumPad7",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 7 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 7
        }
      },
      {
        "key": "NumPad7",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 7 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 7
        }
      },
      {
        "key": "8",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 8 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 8
        }
      },
      {
        "key": "8",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 8 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 8
        }
      },
      {
        "key": "NumPad8",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 8 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 8
        }
      },
      {
        "key": "NumPad8",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 8 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 8
        }
      },
      {
        "key": "9",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 9 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 9
        }
      },
      {
        "key": "9",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 9 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 9
        }
      },
      {
        "key": "NumPad9",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Add the digit 9 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 9
        }
      },
      {
        "key": "NumPad9",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add the digit 9 to the counter",
        "command": "dance.updateCount",
        "args": {
          "addDigits": 9
        }
      },
      {
        "key": "Shift+;",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "command": "workbench.action.showCommands",
        "args": {
          "$exclude": []
        }
      },
      {
        "key": "A",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Insert after",
        "command": "dance.modes.insert.after"
      },
      {
        "key": "A",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Insert after",
        "command": "dance.modes.insert.after"
      },
      {
        "key": "I",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Insert before",
        "command": "dance.modes.insert.before"
      },
      {
        "key": "I",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Insert before",
        "command": "dance.modes.insert.before"
      },
      {
        "key": "Shift+A",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Insert at line end",
        "command": "dance.modes.insert.lineEnd"
      },
      {
        "key": "Shift+A",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Insert at line end",
        "command": "dance.modes.insert.lineEnd"
      },
      {
        "key": "Shift+I",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Insert at line start",
        "command": "dance.modes.insert.lineStart"
      },
      {
        "key": "Shift+I",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Insert at line start",
        "command": "dance.modes.insert.lineStart"
      },
      {
        "key": "Escape",
        "when": "editorTextFocus && dance.mode == 'helix/insert'",
        "title": "Set mode to Normal",
        "command": "dance.modes.set.normal"
      },
      {
        "key": "Escape",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Set mode to Normal",
        "command": "dance.modes.set.normal"
      },
      {
        "key": "V",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Set mode to Normal",
        "command": "dance.modes.set.normal"
      },
      {
        "key": "V",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Set mode to Select",
        "command": "dance.modes.set.select"
      },
      {
        "key": "/",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Search",
        "command": "dance.search"
      },
      {
        "key": "NumPad_Divide",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Search",
        "command": "dance.search"
      },
      {
        "key": "Shift+/",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Search backward",
        "command": "dance.search.backward"
      },
      {
        "key": "Shift+/",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Search backward (extend)",
        "command": "dance.search.backward.extend"
      },
      {
        "key": "/",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Search (extend)",
        "command": "dance.search.extend"
      },
      {
        "key": "N",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select next match",
        "command": "dance.search.next"
      },
      {
        "key": "N",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add next match",
        "command": "dance.search.next.add"
      },
      {
        "key": "Shift+N",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select previous match",
        "command": "dance.search.previous"
      },
      {
        "key": "Shift+N",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Add previous match",
        "command": "dance.search.previous.add"
      },
      {
        "key": "Shift+Alt+8",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Search current selection",
        "command": "dance.search.selection"
      },
      {
        "key": "Alt+NumPad_Multiply",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Search current selection",
        "command": "dance.search.selection"
      },
      {
        "key": "Shift+8",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Search current selection (smart)",
        "command": "dance.search.selection.smart"
      },
      {
        "key": "NumPad_Multiply",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Search current selection (smart)",
        "command": "dance.search.selection.smart"
      },
      {
        "key": "M",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Open match menu",
        "command": "dance.openMenu",
        "args": {
          "menu": "match"
        }
      },
      {
        "key": "M",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Open match menu with extend",
        "command": "dance.openMenu",
        "args": {
          "menu": "match",
          "pass": [
            {
              "shift": "extend"
            }
          ]
        }
      },
      {
        "key": "T",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to character (excluded)",
        "command": "dance.seek"
      },
      {
        "key": "]",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to whole object end",
        "command": "dance.seek.askObject.end"
      },
      {
        "key": "]",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Select to whole object end",
        "command": "dance.seek.askObject.end"
      },
      {
        "key": "[",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to whole object start",
        "command": "dance.seek.askObject.start"
      },
      {
        "key": "[",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Select to whole object start",
        "command": "dance.seek.askObject.start"
      },
      {
        "key": "Shift+T",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to character (excluded, backward)",
        "command": "dance.seek.backward"
      },
      {
        "key": "T",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to character (excluded)",
        "command": "dance.seek.extend"
      },
      {
        "key": "Shift+T",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to character (excluded, backward)",
        "command": "dance.seek.extend.backward"
      },
      {
        "key": "F",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to character (included)",
        "command": "dance.seek.included"
      },
      {
        "key": "Shift+F",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to character (included, backward)",
        "command": "dance.seek.included.backward"
      },
      {
        "key": "F",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to character (included)",
        "command": "dance.seek.included.extend"
      },
      {
        "key": "Shift+F",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to character (included, backward)",
        "command": "dance.seek.included.extend.backward"
      },
      {
        "key": "W",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to next word start",
        "command": "dance.seek.word"
      },
      {
        "key": "B",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to previous word start",
        "command": "dance.seek.word.backward"
      },
      {
        "key": "W",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to next word start",
        "command": "dance.seek.word.extend"
      },
      {
        "key": "B",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to previous word start",
        "command": "dance.seek.word.extend.backward"
      },
      {
        "key": "Shift+W",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to next non-whitespace word start",
        "command": "dance.seek.word.ws"
      },
      {
        "key": "Shift+B",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to previous non-whitespace word start",
        "command": "dance.seek.word.ws.backward"
      },
      {
        "key": "Shift+W",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to next non-whitespace word start",
        "command": "dance.seek.word.ws.extend"
      },
      {
        "key": "Shift+B",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to previous non-whitespace word start",
        "command": "dance.seek.word.ws.extend.backward"
      },
      {
        "key": "E",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to next word end",
        "command": "dance.seek.wordEnd"
      },
      {
        "key": "E",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to next word end",
        "command": "dance.seek.wordEnd.extend"
      },
      {
        "key": "Shift+E",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to next non-whitespace word end",
        "command": "dance.seek.wordEnd.ws"
      },
      {
        "key": "Shift+E",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to next non-whitespace word end",
        "command": "dance.seek.wordEnd.ws.extend"
      },
      {
        "key": "Shift+5",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select whole buffer",
        "command": "dance.select.buffer"
      },
      {
        "key": "Shift+5",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Select whole buffer",
        "command": "dance.select.buffer"
      },
      {
        "key": "J",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend down",
        "command": "dance.select.down.extend"
      },
      {
        "key": "Down",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend down",
        "command": "dance.select.down.extend"
      },
      {
        "key": "J",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Jump down",
        "command": "dance.select.down.jump"
      },
      {
        "key": "Down",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Jump down",
        "command": "dance.select.down.jump"
      },
      {
        "key": "H",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend left",
        "command": "dance.select.left.extend"
      },
      {
        "key": "Left",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend left",
        "command": "dance.select.left.extend"
      },
      {
        "key": "H",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Jump left",
        "command": "dance.select.left.jump"
      },
      {
        "key": "Left",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Jump left",
        "command": "dance.select.left.jump"
      },
      {
        "key": "X",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Extend to line below",
        "command": "dance.select.line.below.extend"
      },
      {
        "key": "X",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to line below",
        "command": "dance.select.line.below.extend"
      },
      {
        "key": "End",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to line end",
        "command": "dance.select.lineEnd"
      },
      {
        "key": "End",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to line end",
        "command": "dance.select.lineEnd.extend"
      },
      {
        "key": "Home",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Select to line start",
        "command": "dance.select.lineStart"
      },
      {
        "key": "Home",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to line start",
        "command": "dance.select.lineStart.extend"
      },
      {
        "key": "L",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend right",
        "command": "dance.select.right.extend"
      },
      {
        "key": "Right",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend right",
        "command": "dance.select.right.extend"
      },
      {
        "key": "L",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Jump right",
        "command": "dance.select.right.jump"
      },
      {
        "key": "Right",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Jump right",
        "command": "dance.select.right.jump"
      },
      {
        "key": "G",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend to",
        "command": "dance.select.to.extend"
      },
      {
        "key": "G",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Go to",
        "command": "dance.select.to.jump"
      },
      {
        "key": "K",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend up",
        "command": "dance.select.up.extend"
      },
      {
        "key": "Up",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Extend up",
        "command": "dance.select.up.extend"
      },
      {
        "key": "K",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Jump up",
        "command": "dance.select.up.jump"
      },
      {
        "key": "Up",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Jump up",
        "command": "dance.select.up.jump"
      },
      {
        "key": "Ctrl+F",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "command": "dance.select.vertically",
        "args": {
          "direction": 1,
          "by": "page",
          "shift": "jump"
        }
      },
      {
        "key": "Ctrl+F",
        "when": "editorTextFocus && dance.mode == 'helix/insert'",
        "command": "dance.select.vertically",
        "args": {
          "direction": 1,
          "by": "page",
          "shift": "jump"
        }
      },
      {
        "key": "Ctrl+D",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "command": "dance.select.vertically",
        "args": {
          "direction": 1,
          "by": "halfPage",
          "shift": "jump"
        }
      },
      {
        "key": "Ctrl+D",
        "when": "editorTextFocus && dance.mode == 'helix/insert'",
        "command": "dance.select.vertically",
        "args": {
          "direction": 1,
          "by": "halfPage",
          "shift": "jump"
        }
      },
      {
        "key": "Ctrl+B",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "command": "dance.select.vertically",
        "args": {
          "direction": -1,
          "by": "page",
          "shift": "jump"
        }
      },
      {
        "key": "Ctrl+B",
        "when": "editorTextFocus && dance.mode == 'helix/insert'",
        "command": "dance.select.vertically",
        "args": {
          "direction": -1,
          "by": "page",
          "shift": "jump"
        }
      },
      {
        "key": "Ctrl+U",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "command": "dance.select.vertically",
        "args": {
          "direction": -1,
          "by": "halfPage",
          "shift": "jump"
        }
      },
      {
        "key": "Ctrl+U",
        "when": "editorTextFocus && dance.mode == 'helix/insert'",
        "command": "dance.select.vertically",
        "args": {
          "direction": -1,
          "by": "halfPage",
          "shift": "jump"
        }
      },
      {
        "key": "Ctrl+F",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.select.vertically",
        "args": {
          "direction": 1,
          "by": "page",
          "shift": "extend"
        }
      },
      {
        "key": "Ctrl+D",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.select.vertically",
        "args": {
          "direction": 1,
          "by": "halfPage",
          "shift": "extend"
        }
      },
      {
        "key": "Ctrl+B",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.select.vertically",
        "args": {
          "direction": -1,
          "by": "page",
          "shift": "extend"
        }
      },
      {
        "key": "Ctrl+U",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.select.vertically",
        "args": {
          "direction": -1,
          "by": "halfPage",
          "shift": "extend"
        }
      },
      {
        "key": "Y",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "command": "dance.run",
        "args": {
          "commands": [
            [
              ".selections.saveText"
            ],
            [
              ".modes.set.normal"
            ]
          ]
        }
      },
      {
        "key": "Alt+;",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Change direction of selections",
        "command": "dance.selections.changeDirection"
      },
      {
        "key": "Alt+;",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Change direction of selections",
        "command": "dance.selections.changeDirection"
      },
      {
        "key": "Alt+,",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Clear main selections",
        "command": "dance.selections.clear.main"
      },
      {
        "key": "Alt+,",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Clear main selections",
        "command": "dance.selections.clear.main"
      },
      {
        "key": ",",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Clear secondary selections",
        "command": "dance.selections.clear.secondary"
      },
      {
        "key": ",",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Clear secondary selections",
        "command": "dance.selections.clear.secondary"
      },
      {
        "key": "Shift+C",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Copy selections below",
        "command": "dance.selections.copy"
      },
      {
        "key": "Shift+C",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Copy selections below",
        "command": "dance.selections.copy"
      },
      {
        "key": "Shift+Alt+C",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Copy selections above",
        "command": "dance.selections.copy.above"
      },
      {
        "key": "Shift+Alt+C",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Copy selections above",
        "command": "dance.selections.copy.above"
      },
      {
        "key": "Shift+X",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Expand to lines",
        "command": "dance.selections.expandToLines"
      },
      {
        "key": "Shift+X",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Expand to lines",
        "command": "dance.selections.expandToLines"
      },
      {
        "key": "Shift+4",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Filter selections",
        "command": "dance.selections.filter"
      },
      {
        "key": "Shift+4",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Filter selections",
        "command": "dance.selections.filter"
      },
      {
        "key": "Alt+K",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Keep matching selections",
        "command": "dance.selections.filter.regexp"
      },
      {
        "key": "Alt+K",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Keep matching selections",
        "command": "dance.selections.filter.regexp"
      },
      {
        "key": "Shift+Alt+K",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Clear matching selections",
        "command": "dance.selections.filter.regexp.inverse"
      },
      {
        "key": "Shift+Alt+K",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Clear matching selections",
        "command": "dance.selections.filter.regexp.inverse"
      },
      {
        "key": "Shift+Alt+\\",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Pipe selections",
        "command": "dance.selections.pipe"
      },
      {
        "key": "Shift+Alt+\\",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Pipe selections",
        "command": "dance.selections.pipe"
      },
      {
        "key": "Shift+1",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Pipe and append",
        "command": "dance.selections.pipe.append"
      },
      {
        "key": "Shift+1",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Pipe and append",
        "command": "dance.selections.pipe.append"
      },
      {
        "key": "Shift+Alt+1",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Pipe and prepend",
        "command": "dance.selections.pipe.prepend"
      },
      {
        "key": "Shift+Alt+1",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Pipe and prepend",
        "command": "dance.selections.pipe.prepend"
      },
      {
        "key": "Shift+\\",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Pipe and replace",
        "command": "dance.selections.pipe.replace"
      },
      {
        "key": "Shift+\\",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Pipe and replace",
        "command": "dance.selections.pipe.replace"
      },
      {
        "key": ";",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Reduce selections to their cursor",
        "command": "dance.selections.reduce"
      },
      {
        "key": ";",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Reduce selections to their cursor",
        "command": "dance.selections.reduce"
      },
      {
        "key": "Y",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Copy selections text",
        "command": "dance.selections.saveText"
      },
      {
        "key": "S",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Leap or select",
        "command": "dance.selections.select.orLeap"
      },
      {
        "key": "S",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Leap or select",
        "command": "dance.selections.select.orLeap"
      },
      {
        "key": "Shift+S",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Split selections",
        "command": "dance.selections.split"
      },
      {
        "key": "Shift+S",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Split selections",
        "command": "dance.selections.split"
      },
      {
        "key": "Alt+S",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Leap or select backward",
        "command": "dance.selections.splitLines.orLeap.backward"
      },
      {
        "key": "Alt+S",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Leap or select backward",
        "command": "dance.selections.splitLines.orLeap.backward"
      },
      {
        "key": "Enter",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Toggle selection indices",
        "command": "dance.selections.toggleIndices"
      },
      {
        "key": "Enter",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Toggle selection indices",
        "command": "dance.selections.toggleIndices"
      },
      {
        "key": "Alt+X",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Trim lines",
        "command": "dance.selections.trimLines"
      },
      {
        "key": "Alt+X",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Trim lines",
        "command": "dance.selections.trimLines"
      },
      {
        "key": "Shift+-",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Trim whitespace",
        "command": "dance.selections.trimWhitespace"
      },
      {
        "key": "Shift+-",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Trim whitespace",
        "command": "dance.selections.trimWhitespace"
      },
      {
        "key": "Shift+Alt+0",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Rotate selections clockwise (contents only)",
        "command": "dance.selections.rotate.contents"
      },
      {
        "key": "Shift+Alt+0",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Rotate selections clockwise (contents only)",
        "command": "dance.selections.rotate.contents"
      },
      {
        "key": "Shift+Alt+9",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Rotate selections counter-clockwise (contents only)",
        "command": "dance.selections.rotate.contents.reverse"
      },
      {
        "key": "Shift+Alt+9",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Rotate selections counter-clockwise (contents only)",
        "command": "dance.selections.rotate.contents.reverse"
      },
      {
        "key": "Shift+0",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Rotate selections clockwise (selections only)",
        "command": "dance.selections.rotate.selections"
      },
      {
        "key": "Shift+0",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Rotate selections clockwise (selections only)",
        "command": "dance.selections.rotate.selections"
      },
      {
        "key": "Shift+9",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Rotate selections counter-clockwise (selections only)",
        "command": "dance.selections.rotate.selections.reverse"
      },
      {
        "key": "Shift+9",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Rotate selections counter-clockwise (selections only)",
        "command": "dance.selections.rotate.selections.reverse"
      },
      {
        "key": "Z",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Show view menu",
        "command": "dance.openMenu",
        "args": {
          "menu": "view",
          "$exclude": []
        }
      },
      {
        "key": "Z",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Show view menu",
        "command": "dance.openMenu",
        "args": {
          "menu": "view",
          "$exclude": []
        }
      },
      {
        "key": "Shift+Z",
        "when": "editorTextFocus && dance.mode == 'helix/normal'",
        "title": "Show view menu (locked)",
        "command": "dance.openMenu",
        "args": {
          "menu": "view",
          "locked": true,
          "$exclude": []
        }
      },
      {
        "key": "Shift+Z",
        "when": "editorTextFocus && dance.mode == 'helix/select'",
        "title": "Show view menu (locked)",
        "command": "dance.openMenu",
        "args": {
          "menu": "view",
          "locked": true,
          "$exclude": []
        }
      },
      {
        "key": "Q",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+D",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+G",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+H",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+K",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+L",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+M",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+Q",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+V",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+Y",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+2",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+3",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+6",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "'",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "-",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "=",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Tab",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Space",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "NumPad_Add",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "NumPad_Subtract",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+=",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+Tab",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+Space",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+NumPad_Add",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Shift+NumPad_Subtract",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/normal'"
      },
      {
        "key": "Q",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+D",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+G",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+H",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+K",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+L",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+M",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+Q",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+V",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+Y",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+2",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+3",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+6",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+7",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+8",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "'",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "-",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "=",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Tab",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Space",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "NumPad_Add",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "NumPad_Subtract",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+'",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+=",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+Tab",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+Space",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+NumPad_Add",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      },
      {
        "key": "Shift+NumPad_Subtract",
        "command": "dance.ignore",
        "when": "editorTextFocus && dance.mode == 'helix/select'"
      }
    ]
  }
}
